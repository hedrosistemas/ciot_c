/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_CIOT_CIOT_PROTO_V2_MBUS_PB_H_INCLUDED
#define PB_CIOT_CIOT_PROTO_V2_MBUS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enum representing Modbus client error codes. */
typedef enum ciot_mbus_error {
    CIOT_MBUS_ERROR_NONE = 0, /* No error */
    CIOT_MBUS_ERROR_REG_ADDR = 1, /* Invalid register address */
    CIOT_MBUS_ERROR_ARG = 2, /* Invalid argument */
    CIOT_MBUS_ERROR_PORT_LAYER = 3, /* Port layer error */
    CIOT_MBUS_ERROR_NO_RESOURCE = 4, /* No resource error */
    CIOT_MBUS_ERROR_IO = 5, /* I/O error */
    CIOT_MBUS_ERROR_STATE = 6, /* Protocol stack invalid state error */
    CIOT_MBUS_ERROR_TIMEOUT = 7 /* Timeout error */
} ciot_mbus_error_t;

/* Enum representing Modbus function codes */
typedef enum ciot_mbus_func_code {
    CIOT_MBUS_FUNC_CODE_NONE = 0, /* No function */
    CIOT_MBUS_FUNC_CODE_READ_COILS = 1, /* Read Coils (0x01) */
    CIOT_MBUS_FUNC_CODE_READ_DI = 2, /* Read Discrete Inputs (0x02) */
    CIOT_MBUS_FUNC_CODE_READ_HR = 3, /* Read Holding Registers (0x03) */
    CIOT_MBUS_FUNC_CODE_READ_IR = 4, /* Read Input Registers (0x04) */
    CIOT_MBUS_FUNC_CODE_WRITE_SINGLE_COIL = 5, /* Write Single Coil (0x05) */
    CIOT_MBUS_FUNC_CODE_WRITE_SINGLE_HR = 6, /* Write Single Holding Register (0x06) */
    CIOT_MBUS_FUNC_CODE_WRITE_MULTIPLE_COILS = 15, /* Write Coils (0x0F) */
    CIOT_MBUS_FUNC_CODE_WRITE_MULTIPLE_HR = 16 /* Write Holding Registers (0x10) */
} ciot_mbus_func_code_t;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _CIOT_MBUS_ERROR_MIN CIOT_MBUS_ERROR_NONE
#define _CIOT_MBUS_ERROR_MAX CIOT_MBUS_ERROR_TIMEOUT
#define _CIOT_MBUS_ERROR_ARRAYSIZE ((ciot_mbus_error_t)(CIOT_MBUS_ERROR_TIMEOUT+1))
#define CIOT_MBUS_ERROR_MBUS_ERROR_NONE CIOT_MBUS_ERROR_NONE
#define CIOT_MBUS_ERROR_MBUS_ERROR_REG_ADDR CIOT_MBUS_ERROR_REG_ADDR
#define CIOT_MBUS_ERROR_MBUS_ERROR_ARG CIOT_MBUS_ERROR_ARG
#define CIOT_MBUS_ERROR_MBUS_ERROR_PORT_LAYER CIOT_MBUS_ERROR_PORT_LAYER
#define CIOT_MBUS_ERROR_MBUS_ERROR_NO_RESOURCE CIOT_MBUS_ERROR_NO_RESOURCE
#define CIOT_MBUS_ERROR_MBUS_ERROR_IO CIOT_MBUS_ERROR_IO
#define CIOT_MBUS_ERROR_MBUS_ERROR_STATE CIOT_MBUS_ERROR_STATE
#define CIOT_MBUS_ERROR_MBUS_ERROR_TIMEOUT CIOT_MBUS_ERROR_TIMEOUT

#define _CIOT_MBUS_FUNC_CODE_MIN CIOT_MBUS_FUNC_CODE_NONE
#define _CIOT_MBUS_FUNC_CODE_MAX CIOT_MBUS_FUNC_CODE_WRITE_MULTIPLE_HR
#define _CIOT_MBUS_FUNC_CODE_ARRAYSIZE ((ciot_mbus_func_code_t)(CIOT_MBUS_FUNC_CODE_WRITE_MULTIPLE_HR+1))
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_NONE CIOT_MBUS_FUNC_CODE_NONE
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_READ_COILS CIOT_MBUS_FUNC_CODE_READ_COILS
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_READ_DI CIOT_MBUS_FUNC_CODE_READ_DI
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_READ_HR CIOT_MBUS_FUNC_CODE_READ_HR
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_READ_IR CIOT_MBUS_FUNC_CODE_READ_IR
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_WRITE_SINGLE_COIL CIOT_MBUS_FUNC_CODE_WRITE_SINGLE_COIL
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_WRITE_SINGLE_HR CIOT_MBUS_FUNC_CODE_WRITE_SINGLE_HR
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_WRITE_MULTIPLE_COILS CIOT_MBUS_FUNC_CODE_WRITE_MULTIPLE_COILS
#define CIOT_MBUS_FUNC_CODE_MBUS_FUNC_CODE_WRITE_MULTIPLE_HR CIOT_MBUS_FUNC_CODE_WRITE_MULTIPLE_HR


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
