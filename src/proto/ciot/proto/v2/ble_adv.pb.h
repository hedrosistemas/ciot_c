/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_CIOT_CIOT_PROTO_V2_BLE_ADV_PB_H_INCLUDED
#define PB_CIOT_CIOT_PROTO_V2_BLE_ADV_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Possible ble adv states */
typedef enum ciot_ble_adv_state {
    /* Idle state */
    CIOT_BLE_ADV_STATE_IDLE = 0, /* BLE adv state: idle. */
    CIOT_BLE_ADV_STATE_STARTED = 1, /* BLE adv state: started and waiting for timeout. */
    CIOT_BLE_ADV_STATE_SENDING = 2 /* BLE adv state: sending data. */
} ciot_ble_adv_state_t;

/* Struct definitions */
/* Ble adv stop message */
typedef struct ciot_ble_adv_stop {
    char dummy_field;
} ciot_ble_adv_stop_t;

/* Ble adv configuration */
typedef struct ciot_ble_adv_cfg {
    uint32_t interval; /* Advertising interval */
    uint32_t duration; /* Advertising duration */
    uint32_t type; /* Advertising type */
    uint32_t filter_policy; /* Advertising filter policy */
    uint32_t tx_power; /* Advertising tx power */
} ciot_ble_adv_cfg_t;

/* Ble adv status */
typedef struct ciot_ble_adv_status {
    ciot_ble_adv_state_t state;
    int32_t err_code;
} ciot_ble_adv_status_t;

/* Ble adv request */
typedef struct ciot_ble_adv_req {
    char dummy_field;
} ciot_ble_adv_req_t;

/* Ble adv data */
typedef struct ciot_ble_adv_data {
    pb_size_t which_type;
    union {
        ciot_ble_adv_stop_t stop; /* Stop BLE adv interface. */
        ciot_ble_adv_cfg_t config; /* BLE adv interface configuration. */
        ciot_ble_adv_status_t status; /* BLE adv interface status. */
        ciot_ble_adv_req_t request; /* BLE adv interface request data. */
    };
} ciot_ble_adv_data_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _CIOT_BLE_ADV_STATE_MIN CIOT_BLE_ADV_STATE_IDLE
#define _CIOT_BLE_ADV_STATE_MAX CIOT_BLE_ADV_STATE_SENDING
#define _CIOT_BLE_ADV_STATE_ARRAYSIZE ((ciot_ble_adv_state_t)(CIOT_BLE_ADV_STATE_SENDING+1))
#define CIOT_BLE_ADV_STATE_BLE_ADV_STATE_IDLE CIOT_BLE_ADV_STATE_IDLE
#define CIOT_BLE_ADV_STATE_BLE_ADV_STATE_STARTED CIOT_BLE_ADV_STATE_STARTED
#define CIOT_BLE_ADV_STATE_BLE_ADV_STATE_SENDING CIOT_BLE_ADV_STATE_SENDING



#define ciot_ble_adv_status_t_state_ENUMTYPE ciot_ble_adv_state_t




/* Initializer values for message structs */
#define CIOT_BLE_ADV_STOP_INIT_DEFAULT           {0}
#define CIOT_BLE_ADV_CFG_INIT_DEFAULT            {0, 0, 0, 0, 0}
#define CIOT_BLE_ADV_STATUS_INIT_DEFAULT         {_CIOT_BLE_ADV_STATE_MIN, 0}
#define CIOT_BLE_ADV_REQ_INIT_DEFAULT            {0}
#define CIOT_BLE_ADV_DATA_INIT_DEFAULT           {0, {CIOT_BLE_ADV_STOP_INIT_DEFAULT}}
#define CIOT_BLE_ADV_STOP_INIT_ZERO              {0}
#define CIOT_BLE_ADV_CFG_INIT_ZERO               {0, 0, 0, 0, 0}
#define CIOT_BLE_ADV_STATUS_INIT_ZERO            {_CIOT_BLE_ADV_STATE_MIN, 0}
#define CIOT_BLE_ADV_REQ_INIT_ZERO               {0}
#define CIOT_BLE_ADV_DATA_INIT_ZERO              {0, {CIOT_BLE_ADV_STOP_INIT_ZERO}}

/* Field tags (for use in manual encoding/decoding) */
#define CIOT_BLE_ADV_CFG_INTERVAL_TAG            1
#define CIOT_BLE_ADV_CFG_DURATION_TAG            2
#define CIOT_BLE_ADV_CFG_TYPE_TAG                3
#define CIOT_BLE_ADV_CFG_FILTER_POLICY_TAG       4
#define CIOT_BLE_ADV_CFG_TX_POWER_TAG            5
#define CIOT_BLE_ADV_STATUS_STATE_TAG            1
#define CIOT_BLE_ADV_STATUS_ERR_CODE_TAG         2
#define CIOT_BLE_ADV_DATA_STOP_TAG               1
#define CIOT_BLE_ADV_DATA_CONFIG_TAG             2
#define CIOT_BLE_ADV_DATA_STATUS_TAG             3
#define CIOT_BLE_ADV_DATA_REQUEST_TAG            4

/* Struct field encoding specification for nanopb */
#define CIOT_BLE_ADV_STOP_FIELDLIST(X, a) \

#define CIOT_BLE_ADV_STOP_CALLBACK NULL
#define CIOT_BLE_ADV_STOP_DEFAULT NULL

#define CIOT_BLE_ADV_CFG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   interval,          1) \
X(a, STATIC,   SINGULAR, UINT32,   duration,          2) \
X(a, STATIC,   SINGULAR, UINT32,   type,              3) \
X(a, STATIC,   SINGULAR, UINT32,   filter_policy,     4) \
X(a, STATIC,   SINGULAR, UINT32,   tx_power,          5)
#define CIOT_BLE_ADV_CFG_CALLBACK NULL
#define CIOT_BLE_ADV_CFG_DEFAULT NULL

#define CIOT_BLE_ADV_STATUS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    state,             1) \
X(a, STATIC,   SINGULAR, INT32,    err_code,          2)
#define CIOT_BLE_ADV_STATUS_CALLBACK NULL
#define CIOT_BLE_ADV_STATUS_DEFAULT NULL

#define CIOT_BLE_ADV_REQ_FIELDLIST(X, a) \

#define CIOT_BLE_ADV_REQ_CALLBACK NULL
#define CIOT_BLE_ADV_REQ_DEFAULT NULL

#define CIOT_BLE_ADV_DATA_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,stop,stop),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,config,config),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,status,status),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,request,request),   4)
#define CIOT_BLE_ADV_DATA_CALLBACK NULL
#define CIOT_BLE_ADV_DATA_DEFAULT NULL
#define ciot_ble_adv_data_t_type_stop_MSGTYPE ciot_ble_adv_stop_t
#define ciot_ble_adv_data_t_type_config_MSGTYPE ciot_ble_adv_cfg_t
#define ciot_ble_adv_data_t_type_status_MSGTYPE ciot_ble_adv_status_t
#define ciot_ble_adv_data_t_type_request_MSGTYPE ciot_ble_adv_req_t

extern const pb_msgdesc_t ciot_ble_adv_stop_t_msg;
extern const pb_msgdesc_t ciot_ble_adv_cfg_t_msg;
extern const pb_msgdesc_t ciot_ble_adv_status_t_msg;
extern const pb_msgdesc_t ciot_ble_adv_req_t_msg;
extern const pb_msgdesc_t ciot_ble_adv_data_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CIOT_BLE_ADV_STOP_FIELDS &ciot_ble_adv_stop_t_msg
#define CIOT_BLE_ADV_CFG_FIELDS &ciot_ble_adv_cfg_t_msg
#define CIOT_BLE_ADV_STATUS_FIELDS &ciot_ble_adv_status_t_msg
#define CIOT_BLE_ADV_REQ_FIELDS &ciot_ble_adv_req_t_msg
#define CIOT_BLE_ADV_DATA_FIELDS &ciot_ble_adv_data_t_msg

/* Maximum encoded size of messages (where known) */
#define CIOT_BLE_ADV_CFG_SIZE                    30
#define CIOT_BLE_ADV_DATA_SIZE                   32
#define CIOT_BLE_ADV_REQ_SIZE                    0
#define CIOT_BLE_ADV_STATUS_SIZE                 13
#define CIOT_BLE_ADV_STOP_SIZE                   0
#define CIOT_CIOT_PROTO_V2_BLE_ADV_PB_H_MAX_SIZE CIOT_BLE_ADV_DATA_SIZE

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
