/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_CIOT_CIOT_PROTO_V2_EVENT_PB_H_INCLUDED
#define PB_CIOT_CIOT_PROTO_V2_EVENT_PB_H_INCLUDED
#include <pb.h>
#include "ciot/proto/v2/msg.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enum representing different event types */
typedef enum ciot_event_type {
    CIOT_EVENT_TYPE_UNKNOWN = 0, /* Unknown event type */
    CIOT_EVENT_TYPE_DATA = 1, /* Event data */
    CIOT_EVENT_TYPE_STARTED = 2, /* Event interface started */
    CIOT_EVENT_TYPE_STOPPED = 3, /* Event interface stopped */
    CIOT_EVENT_TYPE_ERROR = 4, /* Event error */
    CIOT_EVENT_TYPE_REQUEST = 5, /* Event request */
    CIOT_EVENT_TYPE_DONE = 6, /* Event request done */
    CIOT_EVENT_TYPE_STATE_CHANGED = 7, /* Event interface state changed */
    CIOT_EVENT_TYPE_INTERNAL = 8, /* Event internal */
    CIOT_EVENT_TYPE_CUSTOM = 9 /* Event custom */
} ciot_event_type_t;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(128) ciot_event_raw_t;
/* Message representing an CIoT event */
typedef struct ciot_event {
    ciot_event_type_t type; /* Event type */
    pb_size_t which_data;
    union {
        ciot_msg_t msg; /* Event message */
        ciot_event_raw_t raw; /* Event raw data */
    };
} ciot_event_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _CIOT_EVENT_TYPE_MIN CIOT_EVENT_TYPE_UNKNOWN
#define _CIOT_EVENT_TYPE_MAX CIOT_EVENT_TYPE_CUSTOM
#define _CIOT_EVENT_TYPE_ARRAYSIZE ((ciot_event_type_t)(CIOT_EVENT_TYPE_CUSTOM+1))
#define CIOT_EVENT_TYPE_EVENT_TYPE_UNKNOWN CIOT_EVENT_TYPE_UNKNOWN
#define CIOT_EVENT_TYPE_EVENT_TYPE_DATA CIOT_EVENT_TYPE_DATA
#define CIOT_EVENT_TYPE_EVENT_TYPE_STARTED CIOT_EVENT_TYPE_STARTED
#define CIOT_EVENT_TYPE_EVENT_TYPE_STOPPED CIOT_EVENT_TYPE_STOPPED
#define CIOT_EVENT_TYPE_EVENT_TYPE_ERROR CIOT_EVENT_TYPE_ERROR
#define CIOT_EVENT_TYPE_EVENT_TYPE_REQUEST CIOT_EVENT_TYPE_REQUEST
#define CIOT_EVENT_TYPE_EVENT_TYPE_DONE CIOT_EVENT_TYPE_DONE
#define CIOT_EVENT_TYPE_EVENT_TYPE_STATE_CHANGED CIOT_EVENT_TYPE_STATE_CHANGED
#define CIOT_EVENT_TYPE_EVENT_TYPE_INTERNAL CIOT_EVENT_TYPE_INTERNAL
#define CIOT_EVENT_TYPE_EVENT_TYPE_CUSTOM CIOT_EVENT_TYPE_CUSTOM

#define ciot_event_t_type_ENUMTYPE ciot_event_type_t


/* Initializer values for message structs */
#define CIOT_EVENT_INIT_DEFAULT                  {_CIOT_EVENT_TYPE_MIN, 0, {CIOT_MSG_INIT_DEFAULT}}
#define CIOT_EVENT_INIT_ZERO                     {_CIOT_EVENT_TYPE_MIN, 0, {CIOT_MSG_INIT_ZERO}}

/* Field tags (for use in manual encoding/decoding) */
#define CIOT_EVENT_TYPE_TAG                      1
#define CIOT_EVENT_MSG_TAG                       2
#define CIOT_EVENT_RAW_TAG                       3

/* Struct field encoding specification for nanopb */
#define CIOT_EVENT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (data,msg,msg),    2) \
X(a, STATIC,   ONEOF,    BYTES,    (data,raw,raw),    3)
#define CIOT_EVENT_CALLBACK NULL
#define CIOT_EVENT_DEFAULT NULL
#define ciot_event_t_data_msg_MSGTYPE ciot_msg_t

extern const pb_msgdesc_t ciot_event_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CIOT_EVENT_FIELDS &ciot_event_t_msg

/* Maximum encoded size of messages (where known) */
#if defined(Ciot_Msg_size)
union Ciot_Event_data_size_union {char f2[(6 + Ciot_Msg_size)]; char f0[131];};
#endif
#if defined(Ciot_Msg_size)
#define CIOT_CIOT_PROTO_V2_EVENT_PB_H_MAX_SIZE   CIOT_EVENT_SIZE
#define CIOT_EVENT_SIZE                          (2 + sizeof(union Ciot_Event_data_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
