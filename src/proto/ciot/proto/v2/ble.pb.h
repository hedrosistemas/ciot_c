/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_CIOT_CIOT_PROTO_V2_BLE_PB_H_INCLUDED
#define PB_CIOT_CIOT_PROTO_V2_BLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Possible ble states */
typedef enum ciot_ble_state {
    /* Idle state */
    CIOT_BLE_STATE_IDLE = 0,
    /* Bluetooth module started */
    CIOT_BLE_STATE_STARTED = 1
} ciot_ble_state_t;

/* Struct definitions */
/* Bluetooth stop */
typedef struct ciot_ble_stop {
    char dummy_field;
} ciot_ble_stop_t;

/* Bluetooth module configuration */
typedef struct ciot_ble_cfg {
    pb_byte_t mac[6]; /* Mac address. If empty, is ignored, and the hardware mac */
} ciot_ble_cfg_t;

/* Bluetooth module information */
typedef struct ciot_ble_info {
    /* Hardware mac address */
    pb_byte_t hw_mac[6];
    /* Software mac address */
    pb_byte_t sw_mac[6];
} ciot_ble_info_t;

/* Bluetooth module status */
typedef struct ciot_ble_status {
    /* Current state */
    ciot_ble_state_t state;
    /* Current error code */
    int32_t err_code;
    /* Software mac assigned */
    bool using_sw_mac;
} ciot_ble_status_t;

/* Bluetooth module request */
typedef struct ciot_ble_req {
    pb_size_t which_type;
    union {
        pb_byte_t set_mac[6];
    };
} ciot_ble_req_t;

/* Bluetooth module data */
typedef struct ciot_ble_data {
    pb_size_t which_type;
    union {
        ciot_ble_stop_t stop;
        ciot_ble_cfg_t config;
        ciot_ble_status_t status;
        ciot_ble_req_t request;
        ciot_ble_info_t info;
    };
} ciot_ble_data_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _CIOT_BLE_STATE_MIN CIOT_BLE_STATE_IDLE
#define _CIOT_BLE_STATE_MAX CIOT_BLE_STATE_STARTED
#define _CIOT_BLE_STATE_ARRAYSIZE ((ciot_ble_state_t)(CIOT_BLE_STATE_STARTED+1))
#define CIOT_BLE_STATE_BLE_STATE_IDLE CIOT_BLE_STATE_IDLE
#define CIOT_BLE_STATE_BLE_STATE_STARTED CIOT_BLE_STATE_STARTED




#define ciot_ble_status_t_state_ENUMTYPE ciot_ble_state_t




/* Initializer values for message structs */
#define CIOT_BLE_STOP_INIT_DEFAULT               {0}
#define CIOT_BLE_CFG_INIT_DEFAULT                {{0}}
#define CIOT_BLE_INFO_INIT_DEFAULT               {{0}, {0}}
#define CIOT_BLE_STATUS_INIT_DEFAULT             {_CIOT_BLE_STATE_MIN, 0, 0}
#define CIOT_BLE_REQ_INIT_DEFAULT                {0, {{0}}}
#define CIOT_BLE_DATA_INIT_DEFAULT               {0, {CIOT_BLE_STOP_INIT_DEFAULT}}
#define CIOT_BLE_STOP_INIT_ZERO                  {0}
#define CIOT_BLE_CFG_INIT_ZERO                   {{0}}
#define CIOT_BLE_INFO_INIT_ZERO                  {{0}, {0}}
#define CIOT_BLE_STATUS_INIT_ZERO                {_CIOT_BLE_STATE_MIN, 0, 0}
#define CIOT_BLE_REQ_INIT_ZERO                   {0, {{0}}}
#define CIOT_BLE_DATA_INIT_ZERO                  {0, {CIOT_BLE_STOP_INIT_ZERO}}

/* Field tags (for use in manual encoding/decoding) */
#define CIOT_BLE_CFG_MAC_TAG                     1
#define CIOT_BLE_INFO_HW_MAC_TAG                 1
#define CIOT_BLE_INFO_SW_MAC_TAG                 2
#define CIOT_BLE_STATUS_STATE_TAG                1
#define CIOT_BLE_STATUS_ERR_CODE_TAG             2
#define CIOT_BLE_STATUS_USING_SW_MAC_TAG         3
#define CIOT_BLE_REQ_SET_MAC_TAG                 1
#define CIOT_BLE_DATA_STOP_TAG                   1
#define CIOT_BLE_DATA_CONFIG_TAG                 2
#define CIOT_BLE_DATA_STATUS_TAG                 3
#define CIOT_BLE_DATA_REQUEST_TAG                4
#define CIOT_BLE_DATA_INFO_TAG                   5

/* Struct field encoding specification for nanopb */
#define CIOT_BLE_STOP_FIELDLIST(X, a) \

#define CIOT_BLE_STOP_CALLBACK NULL
#define CIOT_BLE_STOP_DEFAULT NULL

#define CIOT_BLE_CFG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, mac,               1)
#define CIOT_BLE_CFG_CALLBACK NULL
#define CIOT_BLE_CFG_DEFAULT NULL

#define CIOT_BLE_INFO_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, hw_mac,            1) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, sw_mac,            2)
#define CIOT_BLE_INFO_CALLBACK NULL
#define CIOT_BLE_INFO_DEFAULT NULL

#define CIOT_BLE_STATUS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    state,             1) \
X(a, STATIC,   SINGULAR, INT32,    err_code,          2) \
X(a, STATIC,   SINGULAR, BOOL,     using_sw_mac,      3)
#define CIOT_BLE_STATUS_CALLBACK NULL
#define CIOT_BLE_STATUS_DEFAULT NULL

#define CIOT_BLE_REQ_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    FIXED_LENGTH_BYTES, (type,set_mac,set_mac),   1)
#define CIOT_BLE_REQ_CALLBACK NULL
#define CIOT_BLE_REQ_DEFAULT NULL

#define CIOT_BLE_DATA_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,stop,stop),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,config,config),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,status,status),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,request,request),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,info,info),   5)
#define CIOT_BLE_DATA_CALLBACK NULL
#define CIOT_BLE_DATA_DEFAULT NULL
#define ciot_ble_data_t_type_stop_MSGTYPE ciot_ble_stop_t
#define ciot_ble_data_t_type_config_MSGTYPE ciot_ble_cfg_t
#define ciot_ble_data_t_type_status_MSGTYPE ciot_ble_status_t
#define ciot_ble_data_t_type_request_MSGTYPE ciot_ble_req_t
#define ciot_ble_data_t_type_info_MSGTYPE ciot_ble_info_t

extern const pb_msgdesc_t ciot_ble_stop_t_msg;
extern const pb_msgdesc_t ciot_ble_cfg_t_msg;
extern const pb_msgdesc_t ciot_ble_info_t_msg;
extern const pb_msgdesc_t ciot_ble_status_t_msg;
extern const pb_msgdesc_t ciot_ble_req_t_msg;
extern const pb_msgdesc_t ciot_ble_data_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CIOT_BLE_STOP_FIELDS &ciot_ble_stop_t_msg
#define CIOT_BLE_CFG_FIELDS &ciot_ble_cfg_t_msg
#define CIOT_BLE_INFO_FIELDS &ciot_ble_info_t_msg
#define CIOT_BLE_STATUS_FIELDS &ciot_ble_status_t_msg
#define CIOT_BLE_REQ_FIELDS &ciot_ble_req_t_msg
#define CIOT_BLE_DATA_FIELDS &ciot_ble_data_t_msg

/* Maximum encoded size of messages (where known) */
#define CIOT_BLE_CFG_SIZE                        8
#define CIOT_BLE_DATA_SIZE                       18
#define CIOT_BLE_INFO_SIZE                       16
#define CIOT_BLE_REQ_SIZE                        8
#define CIOT_BLE_STATUS_SIZE                     15
#define CIOT_BLE_STOP_SIZE                       0
#define CIOT_CIOT_PROTO_V2_BLE_PB_H_MAX_SIZE     CIOT_BLE_DATA_SIZE

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
