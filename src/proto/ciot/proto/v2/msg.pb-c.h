/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ciot/proto/v2/msg.proto */

#ifndef PROTOBUF_C_ciot_2fproto_2fv2_2fmsg_2eproto__INCLUDED
#define PROTOBUF_C_ciot_2fproto_2fv2_2fmsg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ciot/proto/v1/iface.pb-c.h"
#include "ciot/proto/v1/ble_adv.pb-c.h"
#include "ciot/proto/v1/ble_scn.pb-c.h"
#include "ciot/proto/v1/ble.pb-c.h"
#include "ciot/proto/v1/ciot.pb-c.h"
#include "ciot/proto/v1/dfu.pb-c.h"
#include "ciot/proto/v1/errors.pb-c.h"
#include "ciot/proto/v1/gpio.pb-c.h"
#include "ciot/proto/v1/http_client.pb-c.h"
#include "ciot/proto/v1/http_server.pb-c.h"
#include "ciot/proto/v1/logger.pb-c.h"
#include "ciot/proto/v1/model.pb-c.h"
#include "ciot/proto/v1/mqtt_client.pb-c.h"
#include "ciot/proto/v1/ntp.pb-c.h"
#include "ciot/proto/v1/ota.pb-c.h"
#include "ciot/proto/v1/storage.pb-c.h"
#include "ciot/proto/v1/socket.pb-c.h"
#include "ciot/proto/v1/sys.pb-c.h"
#include "ciot/proto/v1/tcp.pb-c.h"
#include "ciot/proto/v1/uart.pb-c.h"
#include "ciot/proto/v1/usb.pb-c.h"
#include "ciot/proto/v1/wifi.pb-c.h"

typedef struct Ciot__MsgError Ciot__MsgError;
typedef struct Ciot__MsgHeader Ciot__MsgHeader;
typedef struct Ciot__Msg Ciot__Msg;


/* --- enums --- */

/*
 * Enum representing different types of messages.
 */
typedef enum _Ciot__MsgType {
  /*
   * Unknown message type.
   */
  CIOT__MSG_TYPE__MSG_TYPE_UNKNOWN = 0,
  /*
   * Custom message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_CUSTOM = 1,
  /*
   * Start message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_START = 2,
  /*
   * Stop message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_STOP = 3,
  /*
   * configuration message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_CONFIG = 4,
  /*
   * information message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_INFO = 5,
  /*
   * status message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_STATUS = 6,
  /*
   * Send payload message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_SEND_PAYLOAD = 7,
  /*
   * Request message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_REQUEST = 8,
  /*
   * Error message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_ERROR = 9,
  /*
   * Event message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_EVENT = 10,
  /*
   * Log message.
   */
  CIOT__MSG_TYPE__MSG_TYPE_LOG = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__MSG_TYPE)
} Ciot__MsgType;

/* --- messages --- */

/*
 * Message representing error details for a message.
 */
struct  Ciot__MsgError
{
  ProtobufCMessage base;
  /*
   * Type of the message.
   */
  Ciot__MsgHeader *msg;
  /*
   * Interface information.
   */
  Ciot__IfaceInfo *iface;
  /*
   * Error code.
   */
  Ciot__Err code;
};
#define CIOT__MSG_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__msg_error__descriptor) \
    , NULL, NULL, CIOT__ERR__OK }


/*
 * Message representing the header of a message.
 */
struct  Ciot__MsgHeader
{
  ProtobufCMessage base;
  /*
   * Message ID.
   */
  uint32_t id;
  /*
   * Message type.
   */
  Ciot__MsgType type;
  /*
   * Interface information.
   */
  Ciot__IfaceInfo *iface;
};
#define CIOT__MSG_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__msg_header__descriptor) \
    , 0, CIOT__MSG_TYPE__MSG_TYPE_UNKNOWN, NULL }


typedef enum {
  CIOT__MSG__DATA__NOT_SET = 0,
  CIOT__MSG__DATA_ERROR = 4,
  CIOT__MSG__DATA_PAYLOAD = 5,
  CIOT__MSG__DATA_MODEL = 6,
  CIOT__MSG__DATA_LOG = 7,
  CIOT__MSG__DATA_CIOT = 8,
  CIOT__MSG__DATA_STORAGE = 9,
  CIOT__MSG__DATA_SYS = 10,
  CIOT__MSG__DATA_UART = 11,
  CIOT__MSG__DATA_USB = 12,
  CIOT__MSG__DATA_TCP = 13,
  CIOT__MSG__DATA_ETH = 14,
  CIOT__MSG__DATA_WIFI = 15,
  CIOT__MSG__DATA_BLE = 16,
  CIOT__MSG__DATA_BLE_SCN = 17,
  CIOT__MSG__DATA_BLE_ADV = 18,
  CIOT__MSG__DATA_NTP = 19,
  CIOT__MSG__DATA_OTA = 20,
  CIOT__MSG__DATA_DFU = 21,
  CIOT__MSG__DATA_HTTP_SERVER = 22,
  CIOT__MSG__DATA_HTTP_CLIENT = 23,
  CIOT__MSG__DATA_MQTT_CLIENT = 24,
  CIOT__MSG__DATA_SOCKET = 25,
  CIOT__MSG__DATA_GPIO = 26
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__MSG__DATA__CASE)
} Ciot__Msg__DataCase;

/*
 * Represents an CioT message
 */
struct  Ciot__Msg
{
  ProtobufCMessage base;
  /*
   * Message ID.
   */
  uint32_t id;
  /*
   * Message type.
   */
  Ciot__MsgType type;
  /*
   * Interface information.
   */
  Ciot__IfaceInfo *iface;
  Ciot__Msg__DataCase data_case;
  union {
    /*
     * Error data.
     */
    Ciot__MsgError *error;
    /*
     * Payload data.
     */
    ProtobufCBinaryData payload;
    /*
     * Model data.
     */
    Ciot__ModelData *model;
    /*
     * Log data.
     */
    Ciot__Log *log;
    /*
     * CIOT data.
     */
    Ciot__CiotData *ciot;
    /*
     * Storage data.
     */
    Ciot__StorageData *storage;
    /*
     * System data.
     */
    Ciot__SysData *sys;
    /*
     * UART data.
     */
    Ciot__UartData *uart;
    /*
     * USB data.
     */
    Ciot__UsbData *usb;
    /*
     * TCP data.
     */
    Ciot__TcpData *tcp;
    /*
     * Ethernet data.
     */
    Ciot__TcpData *eth;
    /*
     * WiFi data.
     */
    Ciot__WifiData *wifi;
    /*
     * BLE data.
     */
    Ciot__BleData *ble;
    /*
     * BLE SCN data.
     */
    Ciot__BleScnData *ble_scn;
    /*
     * BLE ADV data.
     */
    Ciot__BleAdvData *ble_adv;
    /*
     * NTP data.
     */
    Ciot__NtpData *ntp;
    /*
     * OTA data.
     */
    Ciot__OtaData *ota;
    /*
     * DFU data.
     */
    Ciot__DfuData *dfu;
    /*
     * HTTP Server data.
     */
    Ciot__HttpServerData *http_server;
    /*
     * HTTP Client data.
     */
    Ciot__HttpClientData *http_client;
    /*
     * MQTT Client data.
     */
    Ciot__MqttClientData *mqtt_client;
    /*
     * Socket data.
     */
    Ciot__SocketData *socket;
    /*
     * GPIO data.
     */
    Ciot__GpioData *gpio;
  };
};
#define CIOT__MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__msg__descriptor) \
    , 0, CIOT__MSG_TYPE__MSG_TYPE_UNKNOWN, NULL, CIOT__MSG__DATA__NOT_SET, {0} }


/* Ciot__MsgError methods */
void   ciot__msg_error__init
                     (Ciot__MsgError         *message);
size_t ciot__msg_error__get_packed_size
                     (const Ciot__MsgError   *message);
size_t ciot__msg_error__pack
                     (const Ciot__MsgError   *message,
                      uint8_t             *out);
size_t ciot__msg_error__pack_to_buffer
                     (const Ciot__MsgError   *message,
                      ProtobufCBuffer     *buffer);
Ciot__MsgError *
       ciot__msg_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__msg_error__free_unpacked
                     (Ciot__MsgError *message,
                      ProtobufCAllocator *allocator);
/* Ciot__MsgHeader methods */
void   ciot__msg_header__init
                     (Ciot__MsgHeader         *message);
size_t ciot__msg_header__get_packed_size
                     (const Ciot__MsgHeader   *message);
size_t ciot__msg_header__pack
                     (const Ciot__MsgHeader   *message,
                      uint8_t             *out);
size_t ciot__msg_header__pack_to_buffer
                     (const Ciot__MsgHeader   *message,
                      ProtobufCBuffer     *buffer);
Ciot__MsgHeader *
       ciot__msg_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__msg_header__free_unpacked
                     (Ciot__MsgHeader *message,
                      ProtobufCAllocator *allocator);
/* Ciot__Msg methods */
void   ciot__msg__init
                     (Ciot__Msg         *message);
size_t ciot__msg__get_packed_size
                     (const Ciot__Msg   *message);
size_t ciot__msg__pack
                     (const Ciot__Msg   *message,
                      uint8_t             *out);
size_t ciot__msg__pack_to_buffer
                     (const Ciot__Msg   *message,
                      ProtobufCBuffer     *buffer);
Ciot__Msg *
       ciot__msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__msg__free_unpacked
                     (Ciot__Msg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ciot__MsgError_Closure)
                 (const Ciot__MsgError *message,
                  void *closure_data);
typedef void (*Ciot__MsgHeader_Closure)
                 (const Ciot__MsgHeader *message,
                  void *closure_data);
typedef void (*Ciot__Msg_Closure)
                 (const Ciot__Msg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ciot__msg_type__descriptor;
extern const ProtobufCMessageDescriptor ciot__msg_error__descriptor;
extern const ProtobufCMessageDescriptor ciot__msg_header__descriptor;
extern const ProtobufCMessageDescriptor ciot__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ciot_2fproto_2fv2_2fmsg_2eproto__INCLUDED */
