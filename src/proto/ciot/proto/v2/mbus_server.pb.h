/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_CIOT_CIOT_PROTO_V2_MBUS_SERVER_PB_H_INCLUDED
#define PB_CIOT_CIOT_PROTO_V2_MBUS_SERVER_PB_H_INCLUDED
#include <pb.h>
#include "ciot/proto/v2/mbus.pb.h"
#include "ciot/proto/v2/uart.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enum representing the state of the Modbus server. */
typedef enum ciot_mbus_server_state {
    CIOT_MBUS_SERVER_STATE_STOPPED = 0, /* The Modbus server is stopped. */
    CIOT_MBUS_SERVER_STATE_STARTED = 1, /* The Modbus server is started. */
    CIOT_MBUS_SERVER_STATE_ERROR = 2 /* The Modbus server encountered an error. */
} ciot_mbus_server_state_t;

/* Struct definitions */
/* Message used to stop Modbus server interface */
typedef struct ciot_mbus_server_stop {
    char dummy_field;
} ciot_mbus_server_stop_t;

/* Message representing Modbus RTU configuration */
typedef struct ciot_mbus_server_rtu_cfg {
    uint32_t server_id; /* Server ID */
    bool has_uart;
    ciot_uart_cfg_t uart; /* UART settings */
} ciot_mbus_server_rtu_cfg_t;

/* Message representing Modbus TCP configuration */
typedef struct ciot_mbus_server_tcp_cfg {
    uint32_t port; /* Server port */
    uint32_t max_connections; /* Max simultaneos connections */
} ciot_mbus_server_tcp_cfg_t;

/* Message representing Modbus server configuration. */
typedef struct ciot_mbus_server_cfg {
    pb_size_t which_type;
    union {
        ciot_mbus_server_rtu_cfg_t rtu; /* Modbus RTU configuration */
        ciot_mbus_server_tcp_cfg_t tcp; /* Modbus TCP configuration */
    };
} ciot_mbus_server_cfg_t;

/* Message representing Modbus server status. */
typedef struct ciot_mbus_server_status {
    ciot_mbus_server_state_t state; /* State of the Modbus server. */
} ciot_mbus_server_status_t;

/* Message representing an Modbus server request. */
typedef struct ciot_mbus_server_req {
    pb_size_t which_type;
    union {
        ciot_mbus_function_req_t function; /* Function request */
    };
} ciot_mbus_server_req_t;

/* Message representing Modbus server data. */
typedef struct ciot_mbus_server_data {
    pb_size_t which_type;
    union {
        ciot_mbus_server_stop_t stop; /* Stop Modbus server. */
        ciot_mbus_server_cfg_t config; /* Configuration for the Modbus server. */
        ciot_mbus_server_status_t status; /* Status of the Modbus server. */
        ciot_mbus_server_req_t request; /* Modbus server request data. */
    };
} ciot_mbus_server_data_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _CIOT_MBUS_SERVER_STATE_MIN CIOT_MBUS_SERVER_STATE_STOPPED
#define _CIOT_MBUS_SERVER_STATE_MAX CIOT_MBUS_SERVER_STATE_ERROR
#define _CIOT_MBUS_SERVER_STATE_ARRAYSIZE ((ciot_mbus_server_state_t)(CIOT_MBUS_SERVER_STATE_ERROR+1))
#define CIOT_MBUS_SERVER_STATE_MBUS_SERVER_STATE_STOPPED CIOT_MBUS_SERVER_STATE_STOPPED
#define CIOT_MBUS_SERVER_STATE_MBUS_SERVER_STATE_STARTED CIOT_MBUS_SERVER_STATE_STARTED
#define CIOT_MBUS_SERVER_STATE_MBUS_SERVER_STATE_ERROR CIOT_MBUS_SERVER_STATE_ERROR





#define ciot_mbus_server_status_t_state_ENUMTYPE ciot_mbus_server_state_t




/* Initializer values for message structs */
#define CIOT_MBUS_SERVER_STOP_INIT_DEFAULT       {0}
#define CIOT_MBUS_SERVER_RTU_CFG_INIT_DEFAULT    {0, false, CIOT_UART_CFG_INIT_DEFAULT}
#define CIOT_MBUS_SERVER_TCP_CFG_INIT_DEFAULT    {0, 0}
#define CIOT_MBUS_SERVER_CFG_INIT_DEFAULT        {0, {CIOT_MBUS_SERVER_RTU_CFG_INIT_DEFAULT}}
#define CIOT_MBUS_SERVER_STATUS_INIT_DEFAULT     {_CIOT_MBUS_SERVER_STATE_MIN}
#define CIOT_MBUS_SERVER_REQ_INIT_DEFAULT        {0, {CIOT_MBUS_FUNCTION_REQ_INIT_DEFAULT}}
#define CIOT_MBUS_SERVER_DATA_INIT_DEFAULT       {0, {CIOT_MBUS_SERVER_STOP_INIT_DEFAULT}}
#define CIOT_MBUS_SERVER_STOP_INIT_ZERO          {0}
#define CIOT_MBUS_SERVER_RTU_CFG_INIT_ZERO       {0, false, CIOT_UART_CFG_INIT_ZERO}
#define CIOT_MBUS_SERVER_TCP_CFG_INIT_ZERO       {0, 0}
#define CIOT_MBUS_SERVER_CFG_INIT_ZERO           {0, {CIOT_MBUS_SERVER_RTU_CFG_INIT_ZERO}}
#define CIOT_MBUS_SERVER_STATUS_INIT_ZERO        {_CIOT_MBUS_SERVER_STATE_MIN}
#define CIOT_MBUS_SERVER_REQ_INIT_ZERO           {0, {CIOT_MBUS_FUNCTION_REQ_INIT_ZERO}}
#define CIOT_MBUS_SERVER_DATA_INIT_ZERO          {0, {CIOT_MBUS_SERVER_STOP_INIT_ZERO}}

/* Field tags (for use in manual encoding/decoding) */
#define CIOT_MBUS_SERVER_RTU_CFG_SERVER_ID_TAG   1
#define CIOT_MBUS_SERVER_RTU_CFG_UART_TAG        2
#define CIOT_MBUS_SERVER_TCP_CFG_PORT_TAG        1
#define CIOT_MBUS_SERVER_TCP_CFG_MAX_CONNECTIONS_TAG 2
#define CIOT_MBUS_SERVER_CFG_RTU_TAG             1
#define CIOT_MBUS_SERVER_CFG_TCP_TAG             2
#define CIOT_MBUS_SERVER_STATUS_STATE_TAG        1
#define CIOT_MBUS_SERVER_REQ_FUNCTION_TAG        1
#define CIOT_MBUS_SERVER_DATA_STOP_TAG           1
#define CIOT_MBUS_SERVER_DATA_CONFIG_TAG         2
#define CIOT_MBUS_SERVER_DATA_STATUS_TAG         3
#define CIOT_MBUS_SERVER_DATA_REQUEST_TAG        4

/* Struct field encoding specification for nanopb */
#define CIOT_MBUS_SERVER_STOP_FIELDLIST(X, a) \

#define CIOT_MBUS_SERVER_STOP_CALLBACK NULL
#define CIOT_MBUS_SERVER_STOP_DEFAULT NULL

#define CIOT_MBUS_SERVER_RTU_CFG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   server_id,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  uart,              2)
#define CIOT_MBUS_SERVER_RTU_CFG_CALLBACK NULL
#define CIOT_MBUS_SERVER_RTU_CFG_DEFAULT NULL
#define ciot_mbus_server_rtu_cfg_t_uart_MSGTYPE ciot_uart_cfg_t

#define CIOT_MBUS_SERVER_TCP_CFG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   port,              1) \
X(a, STATIC,   SINGULAR, UINT32,   max_connections,   2)
#define CIOT_MBUS_SERVER_TCP_CFG_CALLBACK NULL
#define CIOT_MBUS_SERVER_TCP_CFG_DEFAULT NULL

#define CIOT_MBUS_SERVER_CFG_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,rtu,rtu),    1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,tcp,tcp),    2)
#define CIOT_MBUS_SERVER_CFG_CALLBACK NULL
#define CIOT_MBUS_SERVER_CFG_DEFAULT NULL
#define ciot_mbus_server_cfg_t_type_rtu_MSGTYPE ciot_mbus_server_rtu_cfg_t
#define ciot_mbus_server_cfg_t_type_tcp_MSGTYPE ciot_mbus_server_tcp_cfg_t

#define CIOT_MBUS_SERVER_STATUS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    state,             1)
#define CIOT_MBUS_SERVER_STATUS_CALLBACK NULL
#define CIOT_MBUS_SERVER_STATUS_DEFAULT NULL

#define CIOT_MBUS_SERVER_REQ_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,function,function),   1)
#define CIOT_MBUS_SERVER_REQ_CALLBACK NULL
#define CIOT_MBUS_SERVER_REQ_DEFAULT NULL
#define ciot_mbus_server_req_t_type_function_MSGTYPE ciot_mbus_function_req_t

#define CIOT_MBUS_SERVER_DATA_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,stop,stop),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,config,config),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,status,status),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,request,request),   4)
#define CIOT_MBUS_SERVER_DATA_CALLBACK NULL
#define CIOT_MBUS_SERVER_DATA_DEFAULT NULL
#define ciot_mbus_server_data_t_type_stop_MSGTYPE ciot_mbus_server_stop_t
#define ciot_mbus_server_data_t_type_config_MSGTYPE ciot_mbus_server_cfg_t
#define ciot_mbus_server_data_t_type_status_MSGTYPE ciot_mbus_server_status_t
#define ciot_mbus_server_data_t_type_request_MSGTYPE ciot_mbus_server_req_t

extern const pb_msgdesc_t ciot_mbus_server_stop_t_msg;
extern const pb_msgdesc_t ciot_mbus_server_rtu_cfg_t_msg;
extern const pb_msgdesc_t ciot_mbus_server_tcp_cfg_t_msg;
extern const pb_msgdesc_t ciot_mbus_server_cfg_t_msg;
extern const pb_msgdesc_t ciot_mbus_server_status_t_msg;
extern const pb_msgdesc_t ciot_mbus_server_req_t_msg;
extern const pb_msgdesc_t ciot_mbus_server_data_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CIOT_MBUS_SERVER_STOP_FIELDS &ciot_mbus_server_stop_t_msg
#define CIOT_MBUS_SERVER_RTU_CFG_FIELDS &ciot_mbus_server_rtu_cfg_t_msg
#define CIOT_MBUS_SERVER_TCP_CFG_FIELDS &ciot_mbus_server_tcp_cfg_t_msg
#define CIOT_MBUS_SERVER_CFG_FIELDS &ciot_mbus_server_cfg_t_msg
#define CIOT_MBUS_SERVER_STATUS_FIELDS &ciot_mbus_server_status_t_msg
#define CIOT_MBUS_SERVER_REQ_FIELDS &ciot_mbus_server_req_t_msg
#define CIOT_MBUS_SERVER_DATA_FIELDS &ciot_mbus_server_data_t_msg

/* Maximum encoded size of messages (where known) */
#define CIOT_CIOT_PROTO_V2_MBUS_SERVER_PB_H_MAX_SIZE CIOT_MBUS_SERVER_DATA_SIZE
#define CIOT_MBUS_SERVER_CFG_SIZE                76
#define CIOT_MBUS_SERVER_DATA_SIZE               224
#define CIOT_MBUS_SERVER_REQ_SIZE                221
#define CIOT_MBUS_SERVER_RTU_CFG_SIZE            74
#define CIOT_MBUS_SERVER_STATUS_SIZE             2
#define CIOT_MBUS_SERVER_STOP_SIZE               0
#define CIOT_MBUS_SERVER_TCP_CFG_SIZE            12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
