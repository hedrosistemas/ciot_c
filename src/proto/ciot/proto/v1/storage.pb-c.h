/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ciot/proto/v1/storage.proto */

#ifndef PROTOBUF_C_ciot_2fproto_2fv1_2fstorage_2eproto__INCLUDED
#define PROTOBUF_C_ciot_2fproto_2fv1_2fstorage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Ciot__StorageCfg Ciot__StorageCfg;
typedef struct Ciot__StorageStatus Ciot__StorageStatus;
typedef struct Ciot__StorageInfo Ciot__StorageInfo;
typedef struct Ciot__StorageReqData Ciot__StorageReqData;
typedef struct Ciot__StorageReq Ciot__StorageReq;
typedef struct Ciot__StorageData Ciot__StorageData;


/* --- enums --- */

/*
 * Enum representing the state of the storage module.
 */
typedef enum _Ciot__StorageState {
  /*
   * Storage module is idle.
   */
  CIOT__STORAGE_STATE__STORAGE_STATE_IDLE = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__STORAGE_STATE)
} Ciot__StorageState;
/*
 * Enum representing different types of storage requests.
 */
typedef enum _Ciot__StorageReqType {
  /*
   * Unknown storage request type.
   */
  CIOT__STORAGE_REQ_TYPE__STORAGE_REQ_TYPE_UNKOWN = 0,
  /*
   * Request to save data to storage.
   */
  CIOT__STORAGE_REQ_TYPE__STORAGE_REQ_TYPE_REQ_SAVE = 1,
  /*
   * Request to load data from storage.
   */
  CIOT__STORAGE_REQ_TYPE__STORAGE_REQ_TYPE_REQ_LOAD = 2,
  /*
   * Request to delete data from storage.
   */
  CIOT__STORAGE_REQ_TYPE__STORAGE_REQ_TYPE_REQ_DELETE = 3,
  /*
   * Request to format the storage.
   */
  CIOT__STORAGE_REQ_TYPE__STORAGE_REQ_TYPE_REQ_FORMAT = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__STORAGE_REQ_TYPE)
} Ciot__StorageReqType;
/*
 * Enum representing different types of storage.
 */
typedef enum _Ciot__StorageType {
  /*
   * Unknown storage type.
   */
  CIOT__STORAGE_TYPE__STORAGE_TYPE_UNKNOWN = 0,
  /*
   * EEPROM storage type.
   */
  CIOT__STORAGE_TYPE__STORAGE_TYPE_EEPROM = 1,
  /*
   * Flash storage type.
   */
  CIOT__STORAGE_TYPE__STORAGE_TYPE_FLASH = 2,
  /*
   * File system storage type.
   */
  CIOT__STORAGE_TYPE__STORAGE_TYPE_FS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__STORAGE_TYPE)
} Ciot__StorageType;

/* --- messages --- */

/*
 * Message representing configuration for the storage module.
 */
struct  Ciot__StorageCfg
{
  ProtobufCMessage base;
  /*
   * Type of storage.
   */
  Ciot__StorageType type;
};
#define CIOT__STORAGE_CFG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__storage_cfg__descriptor) \
    , CIOT__STORAGE_TYPE__STORAGE_TYPE_UNKNOWN }


/*
 * Message representing status for the storage module.
 */
struct  Ciot__StorageStatus
{
  ProtobufCMessage base;
  /*
   * State of the storage module.
   */
  Ciot__StorageState state;
  /*
   * Storage module free space
   */
  int32_t free_space;
};
#define CIOT__STORAGE_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__storage_status__descriptor) \
    , CIOT__STORAGE_STATE__STORAGE_STATE_IDLE, 0 }


/*
 * Message representing storage module information.
 */
struct  Ciot__StorageInfo
{
  ProtobufCMessage base;
  int32_t total_size;
};
#define CIOT__STORAGE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__storage_info__descriptor) \
    , 0 }


/*
 * Message representing data for a storage request.
 */
struct  Ciot__StorageReqData
{
  ProtobufCMessage base;
  /*
   * Path for the storage operation.
   */
  char *path;
  /*
   * Data for the storage operation.
   */
  ProtobufCBinaryData data;
};
#define CIOT__STORAGE_REQ_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__storage_req_data__descriptor) \
    , (char *)protobuf_c_empty_string, {0,NULL} }


/*
 * Message representing a storage request.
 */
struct  Ciot__StorageReq
{
  ProtobufCMessage base;
  /*
   * Type of the storage request.
   */
  Ciot__StorageReqType type;
  /*
   * Data associated with the request.
   */
  Ciot__StorageReqData *data;
};
#define CIOT__STORAGE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__storage_req__descriptor) \
    , CIOT__STORAGE_REQ_TYPE__STORAGE_REQ_TYPE_UNKOWN, NULL }


/*
 * Message representing data for the storage module.
 */
struct  Ciot__StorageData
{
  ProtobufCMessage base;
  /*
   * Configuration for the storage module.
   */
  Ciot__StorageCfg *config;
  /*
   * Status of the storage module.
   */
  Ciot__StorageStatus *status;
  /*
   * Storage request data.
   */
  Ciot__StorageReq *request;
  /*
   * Storage information data.
   */
  Ciot__StorageInfo *info;
};
#define CIOT__STORAGE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__storage_data__descriptor) \
    , NULL, NULL, NULL, NULL }


/* Ciot__StorageCfg methods */
void   ciot__storage_cfg__init
                     (Ciot__StorageCfg         *message);
size_t ciot__storage_cfg__get_packed_size
                     (const Ciot__StorageCfg   *message);
size_t ciot__storage_cfg__pack
                     (const Ciot__StorageCfg   *message,
                      uint8_t             *out);
size_t ciot__storage_cfg__pack_to_buffer
                     (const Ciot__StorageCfg   *message,
                      ProtobufCBuffer     *buffer);
Ciot__StorageCfg *
       ciot__storage_cfg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__storage_cfg__free_unpacked
                     (Ciot__StorageCfg *message,
                      ProtobufCAllocator *allocator);
/* Ciot__StorageStatus methods */
void   ciot__storage_status__init
                     (Ciot__StorageStatus         *message);
size_t ciot__storage_status__get_packed_size
                     (const Ciot__StorageStatus   *message);
size_t ciot__storage_status__pack
                     (const Ciot__StorageStatus   *message,
                      uint8_t             *out);
size_t ciot__storage_status__pack_to_buffer
                     (const Ciot__StorageStatus   *message,
                      ProtobufCBuffer     *buffer);
Ciot__StorageStatus *
       ciot__storage_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__storage_status__free_unpacked
                     (Ciot__StorageStatus *message,
                      ProtobufCAllocator *allocator);
/* Ciot__StorageInfo methods */
void   ciot__storage_info__init
                     (Ciot__StorageInfo         *message);
size_t ciot__storage_info__get_packed_size
                     (const Ciot__StorageInfo   *message);
size_t ciot__storage_info__pack
                     (const Ciot__StorageInfo   *message,
                      uint8_t             *out);
size_t ciot__storage_info__pack_to_buffer
                     (const Ciot__StorageInfo   *message,
                      ProtobufCBuffer     *buffer);
Ciot__StorageInfo *
       ciot__storage_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__storage_info__free_unpacked
                     (Ciot__StorageInfo *message,
                      ProtobufCAllocator *allocator);
/* Ciot__StorageReqData methods */
void   ciot__storage_req_data__init
                     (Ciot__StorageReqData         *message);
size_t ciot__storage_req_data__get_packed_size
                     (const Ciot__StorageReqData   *message);
size_t ciot__storage_req_data__pack
                     (const Ciot__StorageReqData   *message,
                      uint8_t             *out);
size_t ciot__storage_req_data__pack_to_buffer
                     (const Ciot__StorageReqData   *message,
                      ProtobufCBuffer     *buffer);
Ciot__StorageReqData *
       ciot__storage_req_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__storage_req_data__free_unpacked
                     (Ciot__StorageReqData *message,
                      ProtobufCAllocator *allocator);
/* Ciot__StorageReq methods */
void   ciot__storage_req__init
                     (Ciot__StorageReq         *message);
size_t ciot__storage_req__get_packed_size
                     (const Ciot__StorageReq   *message);
size_t ciot__storage_req__pack
                     (const Ciot__StorageReq   *message,
                      uint8_t             *out);
size_t ciot__storage_req__pack_to_buffer
                     (const Ciot__StorageReq   *message,
                      ProtobufCBuffer     *buffer);
Ciot__StorageReq *
       ciot__storage_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__storage_req__free_unpacked
                     (Ciot__StorageReq *message,
                      ProtobufCAllocator *allocator);
/* Ciot__StorageData methods */
void   ciot__storage_data__init
                     (Ciot__StorageData         *message);
size_t ciot__storage_data__get_packed_size
                     (const Ciot__StorageData   *message);
size_t ciot__storage_data__pack
                     (const Ciot__StorageData   *message,
                      uint8_t             *out);
size_t ciot__storage_data__pack_to_buffer
                     (const Ciot__StorageData   *message,
                      ProtobufCBuffer     *buffer);
Ciot__StorageData *
       ciot__storage_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__storage_data__free_unpacked
                     (Ciot__StorageData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ciot__StorageCfg_Closure)
                 (const Ciot__StorageCfg *message,
                  void *closure_data);
typedef void (*Ciot__StorageStatus_Closure)
                 (const Ciot__StorageStatus *message,
                  void *closure_data);
typedef void (*Ciot__StorageInfo_Closure)
                 (const Ciot__StorageInfo *message,
                  void *closure_data);
typedef void (*Ciot__StorageReqData_Closure)
                 (const Ciot__StorageReqData *message,
                  void *closure_data);
typedef void (*Ciot__StorageReq_Closure)
                 (const Ciot__StorageReq *message,
                  void *closure_data);
typedef void (*Ciot__StorageData_Closure)
                 (const Ciot__StorageData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ciot__storage_state__descriptor;
extern const ProtobufCEnumDescriptor    ciot__storage_req_type__descriptor;
extern const ProtobufCEnumDescriptor    ciot__storage_type__descriptor;
extern const ProtobufCMessageDescriptor ciot__storage_cfg__descriptor;
extern const ProtobufCMessageDescriptor ciot__storage_status__descriptor;
extern const ProtobufCMessageDescriptor ciot__storage_info__descriptor;
extern const ProtobufCMessageDescriptor ciot__storage_req_data__descriptor;
extern const ProtobufCMessageDescriptor ciot__storage_req__descriptor;
extern const ProtobufCMessageDescriptor ciot__storage_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ciot_2fproto_2fv1_2fstorage_2eproto__INCLUDED */
