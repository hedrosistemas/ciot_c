/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ciot/proto/v1/wifi.proto */

#ifndef PROTOBUF_C_ciot_2fproto_2fv1_2fwifi_2eproto__INCLUDED
#define PROTOBUF_C_ciot_2fproto_2fv1_2fwifi_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ciot/proto/v1/tcp.pb-c.h"

typedef struct Ciot__WifiApInfo Ciot__WifiApInfo;
typedef struct Ciot__WifiCfg Ciot__WifiCfg;
typedef struct Ciot__WifiStatus Ciot__WifiStatus;
typedef struct Ciot__WifiInfo Ciot__WifiInfo;
typedef struct Ciot__WifiScanResult Ciot__WifiScanResult;
typedef struct Ciot__WifiReq Ciot__WifiReq;
typedef struct Ciot__WifiData Ciot__WifiData;


/* --- enums --- */

/*
 * Enum representing the type of Wi-Fi connection.
 */
typedef enum _Ciot__WifiType {
  /*
   * Wi-Fi station mode.
   */
  CIOT__WIFI_TYPE__WIFI_TYPE_STA = 0,
  /*
   * Wi-Fi access point mode.
   */
  CIOT__WIFI_TYPE__WIFI_TYPE_AP = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__WIFI_TYPE)
} Ciot__WifiType;
/*
 * Enum representing the state of Wi-Fi scanning.
 */
typedef enum _Ciot__WifiScanState {
  /*
   * Wi-Fi scan is idle.
   */
  CIOT__WIFI_SCAN_STATE__WIFI_SCAN_STATE_IDLE = 0,
  /*
   * Wi-Fi scan is in progress.
   */
  CIOT__WIFI_SCAN_STATE__WIFI_SCAN_STATE_SCANNING = 1,
  /*
   * Wi-Fi scan completed successfully.
   */
  CIOT__WIFI_SCAN_STATE__WIFI_SCAN_STATE_SCANNED = 2,
  /*
   * Error occurred during Wi-Fi scan.
   */
  CIOT__WIFI_SCAN_STATE__WIFI_SCAN_STATE_ERROR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__WIFI_SCAN_STATE)
} Ciot__WifiScanState;
/*
 * Enum representing the state of the Wi-Fi module.
 */
typedef enum _Ciot__WifiState {
  /*
   * Wi-Fi module is idle.
   */
  CIOT__WIFI_STATE__WIFI_STATE_IDLE = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__WIFI_STATE)
} Ciot__WifiState;
/*
 * Enum representing different types of Wi-Fi requests.
 */
typedef enum _Ciot__WifiReqType {
  /*
   * Unknown Wi-Fi request type.
   */
  CIOT__WIFI_REQ_TYPE__WIFI_REQ_TYPE_UNKOWN = 0,
  /*
   * Wi-Fi scan request.
   */
  CIOT__WIFI_REQ_TYPE__WIFI_REQ_SCAN = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CIOT__WIFI_REQ_TYPE)
} Ciot__WifiReqType;

/* --- messages --- */

/*
 * Message representing information about a Wi-Fi access point.
 */
struct  Ciot__WifiApInfo
{
  ProtobufCMessage base;
  /*
   * BSSID (MAC address) of the access point.
   */
  ProtobufCBinaryData bssid;
  /*
   * SSID (network name) of the access point.
   */
  char *ssid;
  /*
   * Received Signal Strength Indicator (RSSI) of the access point.
   */
  int32_t rssi;
  /*
   * Authentication mode of the access point.
   */
  int32_t authmode;
};
#define CIOT__WIFI_AP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_ap_info__descriptor) \
    , {0,NULL}, (char *)protobuf_c_empty_string, 0, 0 }


/*
 * Message representing configuration for the Wi-Fi module.
 */
struct  Ciot__WifiCfg
{
  ProtobufCMessage base;
  /*
   * Disable Wi-Fi interface
   */
  protobuf_c_boolean disabled;
  /*
   * SSID of the Wi-Fi network.
   */
  char *ssid;
  /*
   * Password for the Wi-Fi network.
   */
  char *password;
  /*
   * Type of Wi-Fi connection.
   */
  Ciot__WifiType type;
  /*
   * TCP configuration for Wi-Fi communication.
   */
  Ciot__TcpCfg *tcp;
};
#define CIOT__WIFI_CFG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_cfg__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, CIOT__WIFI_TYPE__WIFI_TYPE_STA, NULL }


/*
 * Message representing status for the Wi-Fi module.
 */
struct  Ciot__WifiStatus
{
  ProtobufCMessage base;
  /*
   * Reason for Wi-Fi disconnection.
   */
  uint32_t disconnect_reason;
  /*
   * Status of the TCP connection over Wi-Fi.
   */
  Ciot__TcpStatus *tcp;
};
#define CIOT__WIFI_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_status__descriptor) \
    , 0, NULL }


struct  Ciot__WifiInfo
{
  ProtobufCMessage base;
  Ciot__TcpInfo *tcp;
  Ciot__WifiApInfo *ap;
};
#define CIOT__WIFI_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_info__descriptor) \
    , NULL, NULL }


/*
 * Message representing the result of Wi-Fi scanning.
 */
struct  Ciot__WifiScanResult
{
  ProtobufCMessage base;
  /*
   * Number of access points found during scanning.
   */
  int32_t count;
  /*
   * List of Wi-Fi access points found during scanning.
   */
  size_t n_ap_list;
  Ciot__WifiApInfo **ap_list;
};
#define CIOT__WIFI_SCAN_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_scan_result__descriptor) \
    , 0, 0,NULL }


/*
 * Message representing a Wi-Fi request.
 */
struct  Ciot__WifiReq
{
  ProtobufCMessage base;
  /*
   * Type of the Wi-Fi request.
   */
  Ciot__WifiReqType type;
  /*
   * Result of Wi-Fi scanning.
   */
  Ciot__WifiScanResult *scan_result;
};
#define CIOT__WIFI_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_req__descriptor) \
    , CIOT__WIFI_REQ_TYPE__WIFI_REQ_TYPE_UNKOWN, NULL }


/*
 * Message representing data for the Wi-Fi module.
 */
struct  Ciot__WifiData
{
  ProtobufCMessage base;
  /*
   * Configuration for the Wi-Fi module.
   */
  Ciot__WifiCfg *config;
  /*
   * Status of the Wi-Fi module.
   */
  Ciot__WifiStatus *status;
  /*
   * Wi-Fi request data.
   */
  Ciot__WifiReq *request;
  /*
   * TCP information.
   */
  Ciot__WifiInfo *info;
};
#define CIOT__WIFI_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ciot__wifi_data__descriptor) \
    , NULL, NULL, NULL, NULL }


/* Ciot__WifiApInfo methods */
void   ciot__wifi_ap_info__init
                     (Ciot__WifiApInfo         *message);
size_t ciot__wifi_ap_info__get_packed_size
                     (const Ciot__WifiApInfo   *message);
size_t ciot__wifi_ap_info__pack
                     (const Ciot__WifiApInfo   *message,
                      uint8_t             *out);
size_t ciot__wifi_ap_info__pack_to_buffer
                     (const Ciot__WifiApInfo   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiApInfo *
       ciot__wifi_ap_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_ap_info__free_unpacked
                     (Ciot__WifiApInfo *message,
                      ProtobufCAllocator *allocator);
/* Ciot__WifiCfg methods */
void   ciot__wifi_cfg__init
                     (Ciot__WifiCfg         *message);
size_t ciot__wifi_cfg__get_packed_size
                     (const Ciot__WifiCfg   *message);
size_t ciot__wifi_cfg__pack
                     (const Ciot__WifiCfg   *message,
                      uint8_t             *out);
size_t ciot__wifi_cfg__pack_to_buffer
                     (const Ciot__WifiCfg   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiCfg *
       ciot__wifi_cfg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_cfg__free_unpacked
                     (Ciot__WifiCfg *message,
                      ProtobufCAllocator *allocator);
/* Ciot__WifiStatus methods */
void   ciot__wifi_status__init
                     (Ciot__WifiStatus         *message);
size_t ciot__wifi_status__get_packed_size
                     (const Ciot__WifiStatus   *message);
size_t ciot__wifi_status__pack
                     (const Ciot__WifiStatus   *message,
                      uint8_t             *out);
size_t ciot__wifi_status__pack_to_buffer
                     (const Ciot__WifiStatus   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiStatus *
       ciot__wifi_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_status__free_unpacked
                     (Ciot__WifiStatus *message,
                      ProtobufCAllocator *allocator);
/* Ciot__WifiInfo methods */
void   ciot__wifi_info__init
                     (Ciot__WifiInfo         *message);
size_t ciot__wifi_info__get_packed_size
                     (const Ciot__WifiInfo   *message);
size_t ciot__wifi_info__pack
                     (const Ciot__WifiInfo   *message,
                      uint8_t             *out);
size_t ciot__wifi_info__pack_to_buffer
                     (const Ciot__WifiInfo   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiInfo *
       ciot__wifi_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_info__free_unpacked
                     (Ciot__WifiInfo *message,
                      ProtobufCAllocator *allocator);
/* Ciot__WifiScanResult methods */
void   ciot__wifi_scan_result__init
                     (Ciot__WifiScanResult         *message);
size_t ciot__wifi_scan_result__get_packed_size
                     (const Ciot__WifiScanResult   *message);
size_t ciot__wifi_scan_result__pack
                     (const Ciot__WifiScanResult   *message,
                      uint8_t             *out);
size_t ciot__wifi_scan_result__pack_to_buffer
                     (const Ciot__WifiScanResult   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiScanResult *
       ciot__wifi_scan_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_scan_result__free_unpacked
                     (Ciot__WifiScanResult *message,
                      ProtobufCAllocator *allocator);
/* Ciot__WifiReq methods */
void   ciot__wifi_req__init
                     (Ciot__WifiReq         *message);
size_t ciot__wifi_req__get_packed_size
                     (const Ciot__WifiReq   *message);
size_t ciot__wifi_req__pack
                     (const Ciot__WifiReq   *message,
                      uint8_t             *out);
size_t ciot__wifi_req__pack_to_buffer
                     (const Ciot__WifiReq   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiReq *
       ciot__wifi_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_req__free_unpacked
                     (Ciot__WifiReq *message,
                      ProtobufCAllocator *allocator);
/* Ciot__WifiData methods */
void   ciot__wifi_data__init
                     (Ciot__WifiData         *message);
size_t ciot__wifi_data__get_packed_size
                     (const Ciot__WifiData   *message);
size_t ciot__wifi_data__pack
                     (const Ciot__WifiData   *message,
                      uint8_t             *out);
size_t ciot__wifi_data__pack_to_buffer
                     (const Ciot__WifiData   *message,
                      ProtobufCBuffer     *buffer);
Ciot__WifiData *
       ciot__wifi_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ciot__wifi_data__free_unpacked
                     (Ciot__WifiData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ciot__WifiApInfo_Closure)
                 (const Ciot__WifiApInfo *message,
                  void *closure_data);
typedef void (*Ciot__WifiCfg_Closure)
                 (const Ciot__WifiCfg *message,
                  void *closure_data);
typedef void (*Ciot__WifiStatus_Closure)
                 (const Ciot__WifiStatus *message,
                  void *closure_data);
typedef void (*Ciot__WifiInfo_Closure)
                 (const Ciot__WifiInfo *message,
                  void *closure_data);
typedef void (*Ciot__WifiScanResult_Closure)
                 (const Ciot__WifiScanResult *message,
                  void *closure_data);
typedef void (*Ciot__WifiReq_Closure)
                 (const Ciot__WifiReq *message,
                  void *closure_data);
typedef void (*Ciot__WifiData_Closure)
                 (const Ciot__WifiData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ciot__wifi_type__descriptor;
extern const ProtobufCEnumDescriptor    ciot__wifi_scan_state__descriptor;
extern const ProtobufCEnumDescriptor    ciot__wifi_state__descriptor;
extern const ProtobufCEnumDescriptor    ciot__wifi_req_type__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_ap_info__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_cfg__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_status__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_info__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_scan_result__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_req__descriptor;
extern const ProtobufCMessageDescriptor ciot__wifi_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ciot_2fproto_2fv1_2fwifi_2eproto__INCLUDED */
